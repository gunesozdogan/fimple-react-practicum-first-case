(()=>{"use strict";const t={playerIcons:["X","O"],switchIcons:function(){console.log(myGameBoard.board),this.playerIcons="X"===this.playerIcons[0]?["O","X"]:["X","O"]},addMark:function(t,e,o){this.board[t][e]=o},board:[["","",""],["","",""],["","",""]],checkWinner:function(){let t;for(let e=0;e<3;e++)if(this.board[e][0]===this.board[e][1]&&this.board[e][0]===this.board[e][2]&&""!==this.board[e][0])return t=this.board[e][0],t;for(let e=0;e<3;e++)if(this.board[0][e]===this.board[1][e]&&this.board[0][e]===this.board[2][e]&&""!==this.board[0][e])return t=this.board[0][e],t;if(this.board[0][0]===this.board[1][1]&&this.board[0][0]===this.board[2][2]){if(""!==this.board[0][0])return t=this.board[0][0],t}else if(this.board[2][0]===this.board[1][1]&&this.board[2][0]===this.board[0][2]&&""!==this.board[2][0])return t=this.board[2][0],t}};!function(){const e=t,o=[...document.querySelectorAll(".icon-text")],r=[...document.querySelectorAll(".icon")],n=document.querySelector(".game-type"),s=[...document.querySelectorAll(".player")];function c(){const t=document.querySelector(".active"),o=t.querySelector("button").textContent,r=t.querySelector("span").textContent,n=Number(this.className.split(" ")[0].split("-")[1]),c=Number(this.className.split(" ")[0].split("-")[2]);this.textContent=o,this.style.color="X"===this.textContent?"#fff":"#C3073F",e.addMark(n,c,o),e.checkWinner()&&function(t){const o=document.querySelector(".overlay"),r=document.querySelector(".winner-text"),n=e.checkWinner();o.classList.remove("hidden"),r.textContent=`The winner is ${t} (${n})`}(r),s.forEach((t=>t.classList.toggle("active")))}function i(){e.switchIcons();const t=document.querySelector(".player-1-icon"),o=document.querySelector(".player-2-icon");t.textContent=e.playerIcons[0],o.textContent=e.playerIcons[1]}r.forEach((t=>t.addEventListener("click",i))),n.addEventListener("click",(function(){const t=document.querySelector(".player-2-name");"Player vs Player"===n.textContent?(n.textContent="Player vs AI",t.textContent="AI"):(n.textContent="Player vs Player",t.textContent="Player 2")})),o.forEach((t=>t.addEventListener("click",c)))}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,