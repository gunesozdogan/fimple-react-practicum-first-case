(()=>{"use strict";const t={playerIcons:["X","O"],switchIcons:function(){this.playerIcons="X"===this.playerIcons[0]?["O","X"]:["X","O"]},addMark:function(t,e,r){this.board[t][e]=r},board:[["","",""],["","",""],["","",""]],checkWinner:function(){let t;for(let e=0;e<3;e++)if(this.board[e][0]===this.board[e][1]&&this.board[e][0]===this.board[e][2]&&""!==this.board[e][0])return t=this.board[e][0],t;for(let e=0;e<3;e++)if(this.board[0][e]===this.board[1][e]&&this.board[0][e]===this.board[2][e]&&""!==this.board[0][e])return t=this.board[0][e],t;if(this.board[0][0]===this.board[1][1]&&this.board[0][0]===this.board[2][2]){if(""!==this.board[0][0])return t=this.board[0][0],t}else if(this.board[2][0]===this.board[1][1]&&this.board[2][0]===this.board[0][2]&&""!==this.board[2][0])return t=this.board[2][0],t},checkDraw:function(){for(let t=0;t<3;t++)for(let e=0;e<3;e++)if(""===this.board[t][e])return!1;return!0},restartBoard:function(){for(let t=0;t<3;t++)for(let e=0;e<3;e++)this.board[t][e]=""}};!function(){const e=t,r=[...document.querySelectorAll(".icon-text")],o=[...document.querySelectorAll(".icon")],n=document.querySelector(".game-type"),c=[...document.querySelectorAll(".player")],i=document.querySelector(".overlay");let s=!1;function a(){if(s)return;s=!0;const t=document.querySelector(".active"),r=t.querySelector("button").textContent,o=t.querySelector("span").textContent,n=Number(this.className.split(" ")[0].split("-")[1]),c=Number(this.className.split(" ")[0].split("-")[2]),a=document.querySelector(".game-type").textContent,h=document.querySelector(".winner-text");if(""===this.textContent){if(l(this,r),e.addMark(n,c,r),e.checkWinner())u(o);else if(e.checkDraw())i.classList.remove("hidden"),h.textContent="The game is tie!";else if(a.includes("AI"))return d(),setTimeout((()=>{!function(){const t=document.querySelector(".active").querySelector("button").textContent;let r,o,n;do{o=Math.floor(3*Math.random()),n=Math.floor(3*Math.random()),r=document.querySelector(`.span-${o}-${n}`)}while(""!==r.textContent);l(r,t),e.addMark(o,n,t),e.checkWinner()?u("AI"):d()}(),s=!1}),1e3);d(),s=!1}}function l(t,e){t.textContent=e,t.style.color="X"===e?"#FFF":"#C3073F",t.style.transform="scale(1.4)",setTimeout((()=>{t.style.transform="scale(1)"}),500)}function d(){c.forEach((t=>t.classList.toggle("active")))}function u(t){const r=document.querySelector(".winner-text"),o=e.checkWinner();i.classList.remove("hidden"),r.textContent=`The winner is ${t} (${o})`}function h(){r.forEach((t=>t.textContent=""));const t=document.querySelector(".player-1"),o=document.querySelector(".player-2");t.classList.add("active"),o.classList.remove("active"),e.restartBoard()}function y(){e.switchIcons();const t=document.querySelector(".player-1-icon"),r=document.querySelector(".player-2-icon");t.textContent=e.playerIcons[0],r.textContent=e.playerIcons[1],h()}i.addEventListener("click",(function(){i.classList.add("hidden"),h()})),o.forEach((t=>t.addEventListener("click",y))),n.addEventListener("click",(function(){const t=document.querySelector(".player-2-name");"Player vs Player"===n.textContent?(n.textContent="Player vs AI",t.textContent="AI"):(n.textContent="Player vs Player",t.textContent="Player 2"),h()})),r.forEach((t=>t.addEventListener("click",a)))}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,